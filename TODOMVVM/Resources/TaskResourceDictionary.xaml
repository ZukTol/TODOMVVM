<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:TODOMVVM.ViewModels"
                    xmlns:cal="http://www.caliburnproject.org"
                    >

    <Style TargetType="Path" x:Key="CloseXStyle">
        <Setter Property="Data" Value="M0,0 L8,8 M0,8 L8,0"/>
        <Setter Property="Stretch" Value="None"/>
        <Setter Property="StrokeThickness" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="StrokeEndLineCap" Value="Triangle"/>
        <Setter Property="StrokeStartLineCap" Value="Triangle"/>
        <!--<Setter Property="Margin" Value="0 0 10 0"/>-->
    </Style>

    <Style TargetType="Button" x:Key="DeleteTaskButtonStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Path Name="InnerPath" Style="{StaticResource CloseXStyle}" Stroke="#cc9a9a"/>
                        <Rectangle Fill="Transparent" Width="40" Height="40" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="InnerPath" Property="Stroke" Value="#af5b5e"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="TaskBorderStyle">
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="TaskMessageStyle">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
    </Style>

    <Style TargetType="CheckBox" x:Key="CompleteTaskCheckBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="TextBox" x:Key="TaskEditTextBoxStyle">
        <Setter Property="FontSize" Value="24"/>
    </Style>

    <Style TargetType="TextBox" x:Key="TaskEditorReadOnlyStyle">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
    </Style>
    
    <Style TargetType="TextBox" x:Key="CompletedTaskEditorReadOnlyStyle">
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="DimGray"/>
        <Setter Property="TextDecorations" Value="Strikethrough"/>
    </Style>

    <Style TargetType="TextBox" x:Key="TaskEditorEditModeStyle">
        <Setter Property="IsReadOnly" Value="False"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Aqua"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
    </Style>

    <DataTemplate x:Key="TodoTaskDataTemplate" DataType="{x:Type vm:TodoTaskViewModel}">
        <Border Style="{StaticResource TaskBorderStyle}" >
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>

                </Grid.RowDefinitions>

                <Rectangle Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Stroke="DimGray" Height="1" StrokeThickness="1" StrokeDashArray="1 4" SnapsToDevicePixels="True"/>

                <CheckBox Grid.Column="0" Grid.Row="1" Content="" IsChecked="{Binding IsCompleted}" 
                          cal:Message.Attach="InformTaskCompleted" Style="{StaticResource CompleteTaskCheckBox}" 
                          Visibility="{Binding IsInEditMode, Converter={StaticResource BooleanToVisibityInvertedConverter}}"/>
                
                <TextBox Grid.Column="1" Grid.Row="1" Name="TaskEditor" Text="{Binding TaskText, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TaskEditorReadOnlyStyle}"
                         cal:Message.Attach="[MouseDoubleClick]=[OnMouseDoubleClick($eventArgs)];[LostFocus]=[SaveChanges];[LostKeyboardFocus]=[SaveChanges]" />
                
                <Button Grid.Column="2" Grid.Row="1" Name="DeleteButton" Style="{StaticResource DeleteTaskButtonStyle}" Visibility="Collapsed" cal:Message.Attach="DeleteTask"/>

            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInEditMode}" Value="False"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
            
            <DataTrigger Binding="{Binding IsInEditMode}" Value="True">
                <Setter TargetName="TaskEditor" Property="Style" Value="{StaticResource TaskEditorEditModeStyle}"/>
            </DataTrigger>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInEditMode}" Value="False"/>
                    <Condition Binding="{Binding IsCompleted}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="TaskEditor" Property="Style" Value="{StaticResource CompletedTaskEditorReadOnlyStyle}"/>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>