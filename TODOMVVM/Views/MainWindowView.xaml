<Window x:Class="TODOMVVM.Views.MainWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cal="http://www.caliburnproject.org"
        xmlns:infrastructure="clr-namespace:TODOMVVM.Infrastructure"
        xmlns:vm="clr-namespace:TODOMVVM.ViewModels"
        WindowStartupLocation="CenterScreen"
        Style="{DynamicResource MainWindowStyle}"
        Width="600" SizeToContent="Height">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/MainResourceDictionary.xaml"/>
                <ResourceDictionary Source="../Resources/TaskResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <StackPanel Name="Root" Margin="10" FocusManager.FocusedElement="{Binding ElementName=TaskInput}">
        <TextBlock Text="todos" Style="{StaticResource HeaderTextBlockStyle}"/>
        <Grid Height="65" Background="#fefefe" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <CheckBox Grid.Column="0" Content="" IsChecked="{Binding IsMarkAllChecked}" cal:Message.Attach="OnMarkAllClicked"
                      Style="{StaticResource MarkAllCheckBox}" Visibility="{Binding HasTasks, Converter={StaticResource BooleanToVisibilyConverter}}"/>
            <infrastructure:WatermarkTextBox x:Name="TaskInput" Grid.Column="1" Text="{Binding NewToDoText, UpdateSourceTrigger=PropertyChanged}" WatermarkText="What needs to be done?"
                     Style="{StaticResource AddNewToDoTextBoxStyle}" cal:Message.Attach="[Shortcut Enter] = [AddTaskToList]"/>
        </Grid>
        <ItemsControl ItemsSource="{Binding TodoList}" Visibility="{Binding HasTasks, Converter={StaticResource BooleanToVisibilyConverter}}" ItemTemplate="{StaticResource TodoTaskDataTemplate}"/>
        <!--<ItemsControl ItemsSource="{Binding TodoList}" Visibility="{Binding HasTasks, Converter={StaticResource BooleanToVisibilyConverter}}">
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:TodoTaskViewModel}">
                    <StackPanel>
                        <Border Visibility="{Binding IsInEditMode, Converter={StaticResource BooleanToVisibityInvertedConverter}}"
                Style="{StaticResource TaskBorderStyle}" cal:Message.Attach="[MouseLeftButtonDown]=[OnMouseLeftButtonDown($eventArgs)]">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>

                                <Rectangle Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Stroke="DimGray" Height="1" StrokeThickness="1" StrokeDashArray="1 4" SnapsToDevicePixels="True"/>

                                <CheckBox Grid.Column="0" Grid.Row="1" Content="" IsChecked="{Binding IsCompleted}" cal:Message.Attach="InformTaskCompleted" Style="{StaticResource CompleteTaskCheckBox}"/>
                                <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding TaskText}" Style="{StaticResource TaskMessageStyle}"/>
                                <Button Grid.Column="2" Grid.Row="1" Name="DeleteButton" Style="{StaticResource DeleteTaskButtonStyle}" Visibility="Collapsed" cal:Message.Attach="DeleteTask"/>

                            </Grid>
                        </Border>
                        <Border Name="EditorBorder" Visibility="{Binding IsInEditMode, Converter={StaticResource BooleanToVisibilyConverter}}"
                Style="{StaticResource TaskBorderStyle}">
                            <Grid>
                                <TextBox Name="TaskEditor" Text="{Binding NewTaskText}" Style="{StaticResource TaskEditTextBoxStyle}" 
                             cal:Message.Attach="[LostFocus]=[DiscardChanges]; [LostKeyboardFocus]=[DiscardChanges];"/>
                            </Grid>
                        </Border>
                    </StackPanel>

                    <DataTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DeleteButton" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding IsInEditMode}" Value="True">
                            <Setter TargetName="EditorBorder" Property="FocusManager.FocusedElement" Value="{Binding ElementName=TaskEditor}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>-->

        <Border Visibility="{Binding HasTasks, Converter={StaticResource BooleanToVisibilyConverter}}" Style="{StaticResource FooterStyle}">
            <DockPanel LastChildFill="False">
                <TextBlock DockPanel.Dock="Left" Style="{StaticResource ClearCompletedButtonStyle}">
                    <Run Text="{Binding IncompletedCount, Mode=OneWay}" FontWeight="Bold"/>
                    <Run Text="items left"/>
                </TextBlock>
                <TextBlock DockPanel.Dock="Right" Style="{StaticResource ClearCompletedButtonStyle}" cal:Message.Attach="[MouseLeftButtonDown]=[DoClearCompleted]">
                    <Run Text="Clear completed ("/>
                    <Run Text="{Binding CompletedCount, Mode=OneWay}"/>
                    <Run Text=")"/>
                </TextBlock>
            </DockPanel>
        </Border>
    </StackPanel>
</Window>
